import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:hexcolor/hexcolor.dart';
import 'package:v_care_clinic/screens/ProfileScreen/viewmodel/UserProfileCubit/UserProfileCubit.dart';
import 'package:v_care_clinic/screens/home_screen/view/widget/view_all_doctors_home.dart';
import 'package:v_care_clinic/screens/home_screen/view_model/cubit/cubit.dart';
import 'package:v_care_clinic/screens/home_screen/view_model/cubit/states.dart';

import '../../../ProfileScreen/view/screens/UserProfileScreen.dart';
import '../../../doctor_details/view model/doctor_details_cubit.dart';
import '../../../doctor_details/views/doctor details view.dart';

class HomeScreenBody extends StatelessWidget {
  HomeScreenBody({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return BlocConsumer<HomeCubit, HomeStates>(
      listener: (context, state) {},
      builder: (context, state) {
        var cubit = HomeCubit.get(context);
        return Scaffold(
          appBar: AppBar(
            backgroundColor: HexColor('#174068'),
            title: Text('VCare', style: TextStyle(fontSize: 20, color: Colors.white)),
            leading: IconButton(
              icon: Icon(Icons.menu, color: Colors.white),
              onPressed: () {},
            ),
          ),
          floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,

          bottomNavigationBar: BottomAppBar(
            color: Colors.white,
            shape: CircularNotchedRectangle(),
            notchMargin: 5,
            child: Row(
              mainAxisSize: MainAxisSize.max,
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: <Widget>[
                IconButton(icon: Icon(Icons.home, color: Colors.blueAccent,), onPressed: () {},),
                IconButton(icon: Icon(Icons.add, color: Colors.blueAccent,), onPressed: () {},),
                IconButton(icon: Icon(Icons.history, color: Colors.blueAccent,), onPressed: () {},),
                IconButton(icon: Icon(Icons.account_box, color: Colors.blueAccent,), onPressed: () {

               //   UserProfileCubit.get(context).GetUserData();
                 // UserProfileCubit.get(context).GetAppointments();
                  Navigator.of(context).push(
                    MaterialPageRoute(
                      builder: (context) =>  UserProfileScreen(),
                    ),
                  );

                },),
              ],
            ),
          ),
          floatingActionButton:  FloatingActionButton(
            onPressed: () {},
            child: Icon(Icons.search),
            backgroundColor: HexColor('#174068'),
          ),
          body: ListView.builder(
            itemCount: cubit.autogenerated != null ? cubit.autogenerated!.data!.length : 0,
            itemBuilder: (BuildContext context, int sectionIndex) {
              final sectionData = cubit.autogenerated?.data?[sectionIndex];
              return Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Row(
                    children: [
                      Padding(
                        padding: const EdgeInsets.all(16.0),
                        child: Text(
                          sectionData?.name ?? '',
                          style: TextStyle(fontSize: 20.sp, color: Colors.grey),
                        ),
                      ),
                      SizedBox(width: 5,),
                      GestureDetector(
                        onTap: () {
                          print( sectionData?.id ?? '',);
                          Navigator.of(context).push(
                            MaterialPageRoute(
                              builder: (context) => ViewAllScreen(),
                            ),
                          );
                        },
                        child: Text(
                          'View all',
                          style: TextStyle(fontSize: 14.sp),
                        ),
                      )

                    ],
                  ),
                  sectionData != null ? SizedBox(
                    height: 250,
                    child: ListView.builder(
                      itemCount: sectionData.doctors?.length ?? 0,
                      scrollDirection: Axis.horizontal,
                      itemBuilder: (BuildContext context, int index) {
                        final doctor = sectionData.doctors![index];
                        return Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Container(
                            width: 200,
                            height: 250,
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(25),
                              border: Border.all(
                                color: Color(0xff174068),
                              ),
                            ),
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Expanded(
                                  flex: 3,
                                  child: Container(
                                    decoration: BoxDecoration(
                                      image: DecorationImage(
                                        image: NetworkImage(doctor.photo!),
                                        fit: BoxFit.cover,
                                      ),
                                      borderRadius: BorderRadius.circular(12),
                                    ),
                                  ),
                                ),
                                Padding(
                                  padding: const EdgeInsets.only(left: 8, top: 8),
                                  child: Text(
                                    doctor.name!,
                                    style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                                  ),
                                ),
                                Padding(
                                  padding: const EdgeInsets.only(left: 8),
                                  child: Text(
                                    doctor.degree!,
                                    style: TextStyle(fontSize: 14),
                                  ),
                                ),
                                Padding(
                                  padding: const EdgeInsets.only(left: 8),
                                  child: Row(
                                    children: [
                                      Text(

                                        doctor.description!,
                                        style: TextStyle(fontSize: 14),
                                      ),
                                      IconButton(
                                        onPressed: () {
                                          print(doctor.id!);
                                          BlocProvider.of<DoctorDetailsCubit>(context).showDetails(doctor.id!);
                                          Navigator.of(context).push(
                                            MaterialPageRoute(
                                              builder: (context) =>   DoctorDetailsView( id: doctor.id!,),
                                            ),
                                          );
                                        },
                                        icon: Icon(Icons.arrow_right_alt, color: HexColor('#174068')),
                                      ),
                                    ],
                                  ),
                                ),
                              ],
                            ),
                          ),
                        );
                      },
                    ),
                  ) : SizedBox(),
                ],
              );
            },
          ),
        );
      },
    );
  }
}
